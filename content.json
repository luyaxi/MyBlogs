{"pages":[],"posts":[{"title":"若干个1 和 跳格子问题","text":"期中考试摸了，遇到两个奇怪的问题。 第一个问题 对任意n，如果n对2的余数和n对5的余数不为零，则存在n的倍数为若干个1。 123456789101112131415161718192021222324252627282930313233#include &lt;stdio.h&gt;int len(long long n);int main() { int n; scanf(\"%d\", &amp;n); long long i = 1; if (n % 2 != 0 &amp;&amp; n % 5 != 0) { while (i % n != 0) { i *= 10; i += 1; } printf(\"%d\", len(i)); } return 0;}int len(long long n) { int length = 0; if (n &gt;= 0 &amp;&amp; n &lt; 10) return 1; while (n &gt; 0) { length++; n /= 10; } return length;} 问题思考一开始就应该带上优化的想法，从111出发而非从倍数出发。 第二个问题 跳楼梯，输入n（1&lt; n &lt; 100 ），每次能跳1，2，3个阶梯，求总方法数。 显然不能用递归，重复度太高，所以采用dp的思想，迭代解决。 123456789101112131415161718192021#include &lt;stdio.h&gt;int main() { int n; scanf(\"%d\", &amp;n); int i = 1; int a = 1; int b = 2; int c = 4; int t; for (i = 4; i &lt;= n; i++) { t = a + b + c; a = b; b = c; c = t; } printf(\"%d\", t); return 0;} 状态的转移是这里唯一的考点，对到达第i阶楼梯，可以从i-1（a），i-2（b），i-3（c）三种状态到达，最终的效果就是在O(n)时间内解决问题。","link":"/2019/11/15/%E8%8B%A5%E5%B9%B2%E4%B8%AA1-%E5%92%8C-%E8%B7%B3%E6%A0%BC%E5%AD%90%E9%97%AE%E9%A2%98/"}],"tags":[{"name":"Question","slug":"Question","link":"/tags/Question/"}],"categories":[]}